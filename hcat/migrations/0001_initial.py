# Generated by Django 2.1 on 2019-09-17 18:49

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AssayTech',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('comments', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Wrangler assay tech',
            },
        ),
        migrations.CreateModel(
            name='AssayType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('comments', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Wrangler assay type',
            },
        ),
        migrations.CreateModel(
            name='Consent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('comments', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Wrangler consent',
            },
        ),
        migrations.CreateModel(
            name='Contributor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(blank=True, max_length=128)),
                ('phone', models.CharField(blank=True, max_length=32)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('department', models.CharField(blank=True, max_length=255)),
                ('institute', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('zip_postal_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('comments', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ContributorType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('comments', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Wrangler contributor type',
            },
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('comments', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Wrangler disease',
            },
        ),
        migrations.CreateModel(
            name='EffortType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('comments', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Wrangler effort type',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=80, unique=True)),
                ('file', models.FileField(upload_to='uploads')),
                ('description', models.CharField(max_length=255)),
                ('comments', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Wrangler file',
            },
        ),
        migrations.CreateModel(
            name='Funder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('comments', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Wrangler funder',
            },
        ),
        migrations.CreateModel(
            name='Grant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grant_title', models.CharField(max_length=200)),
                ('grant_id', models.CharField(max_length=200)),
                ('comments', models.CharField(blank=True, max_length=255)),
                ('funded_contributors', models.ManyToManyField(blank=True, to='hcat.Contributor')),
            ],
        ),
        migrations.CreateModel(
            name='Intern',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interests', models.CharField(blank=True, max_length=128)),
                ('comments', models.CharField(blank=True, max_length=255)),
                ('advisor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='advisor', to='hcat.Contributor')),
                ('who', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hcat.Contributor')),
            ],
            options={
                'verbose_name': 'Wrangler intern',
            },
        ),
        migrations.CreateModel(
            name='Lab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=50, unique=True)),
                ('institution', models.CharField(blank=True, max_length=255, null=True)),
                ('comments', models.CharField(blank=True, max_length=255)),
                ('contributors', models.ManyToManyField(blank=True, related_name='contributors', to='hcat.Contributor')),
                ('grants', models.ManyToManyField(blank=True, to='hcat.Grant')),
                ('pi', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pi', to='hcat.Contributor')),
            ],
        ),
        migrations.CreateModel(
            name='Organ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=50, unique=True)),
                ('ontology_id', models.CharField(blank=True, max_length=32, null=True)),
                ('ontology_label', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(max_length=255)),
                ('comments', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Wrangler organ',
            },
        ),
        migrations.CreateModel(
            name='OrganPart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=50, unique=True)),
                ('ontology_id', models.CharField(blank=True, max_length=32, null=True)),
                ('ontology_label', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('comments', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Wrangler organ part',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=80)),
                ('comments', models.CharField(blank=True, max_length=255)),
                ('stars', models.IntegerField(blank=True, default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('chat_url', models.URLField(blank=True, null=True)),
                ('first_contact_date', models.DateField(blank=True, default=None, null=True)),
                ('last_contact_date', models.DateField(blank=True, default=None, null=True)),
                ('first_response_date', models.DateField(blank=True, default=None, null=True)),
                ('last_response_date', models.DateField(blank=True, default=None, null=True)),
                ('questionnaire_comments', models.CharField(blank=True, max_length=255)),
                ('questionnaire_date', models.DateField(blank=True, default=None, null=True)),
                ('tAndC_comments', models.CharField(blank=True, max_length=255)),
                ('tAndC_date', models.DateField(blank=True, default=None, null=True)),
                ('sheet_template', models.FileField(blank=True, default=None, null=True, upload_to='uploads/project')),
                ('sheet_template_date', models.DateField(blank=True, default=None, null=True)),
                ('sheet_from_lab', models.FileField(blank=True, default=None, null=True, upload_to='uploads/project')),
                ('sheet_from_lab_date', models.DateField(blank=True, default=None, null=True)),
                ('back_to_lab', models.FileField(blank=True, default=None, null=True, upload_to='uploads/project')),
                ('back_to_lab_date', models.DateField(blank=True, default=None, null=True)),
                ('lab_review_comments', models.CharField(blank=True, max_length=255)),
                ('lab_review_date', models.DateField(blank=True, default=None, null=True)),
                ('sheet_that_validated', models.FileField(blank=True, default=None, null=True, upload_to='uploads/project')),
                ('sheet_validated_date', models.DateField(blank=True, default=None, null=True)),
                ('staging_area', models.URLField(blank=True)),
                ('staging_area_date', models.DateField(blank=True, default=None, null=True)),
                ('submit_date', models.DateField(blank=True, default=None, null=True)),
                ('submit_comments', models.CharField(blank=True, max_length=255)),
                ('title', models.CharField(max_length=120)),
                ('description', models.TextField()),
                ('origin_name', models.CharField(blank=True, max_length=200)),
                ('cells_expected', models.IntegerField(blank=True, default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=30, unique=True)),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Wrangler project state',
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=50, unique=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('pmid', models.CharField(max_length=16)),
                ('comments', models.CharField(blank=True, max_length=255)),
                ('doi', models.CharField(max_length=32)),
            ],
            options={
                'verbose_name': 'Wrangler publication',
            },
        ),
        migrations.CreateModel(
            name='SampleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('comments', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Wrangler sample type',
            },
        ),
        migrations.CreateModel(
            name='SoftwareDeveloper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favorite_languages', models.CharField(max_length=255)),
                ('comments', models.CharField(blank=True, max_length=255)),
                ('who', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hcat.Contributor')),
            ],
            options={
                'verbose_name': 'Wrangler software developer',
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('common_name', models.CharField(max_length=40)),
                ('scientific_name', models.CharField(max_length=150)),
                ('ncbi_taxon', models.IntegerField(unique=True)),
            ],
            options={
                'verbose_name_plural': 'wrangler species',
            },
        ),
        migrations.CreateModel(
            name='Url',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=50, unique=True)),
                ('path', models.URLField()),
                ('description', models.CharField(max_length=255)),
                ('comments', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Wrangler url',
            },
        ),
        migrations.CreateModel(
            name='Wrangler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favorite_site', models.URLField(blank=True, null=True)),
                ('comments', models.CharField(blank=True, max_length=255)),
                ('who', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hcat.Contributor')),
            ],
        ),
        migrations.CreateModel(
            name='Tracker',
            fields=[
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='hcat.Project')),
                ('uuid', models.CharField(max_length=37, unique=True)),
                ('submission_id', models.CharField(max_length=33, unique=True)),
                ('submission_bundles_exported_count', models.IntegerField(blank=True, default=0, verbose_name='ingest')),
                ('aws_primary_bundle_count', models.IntegerField(blank=True, default=0, verbose_name='aws 1')),
                ('gcp_primary_bundle_count', models.IntegerField(blank=True, default=0, verbose_name='gcp 1')),
                ('aws_analysis_bundle_count', models.IntegerField(blank=True, default=0, verbose_name='asw 2')),
                ('gcp_analysis_bundle_count', models.IntegerField(blank=True, default=0, verbose_name='gcp 2')),
                ('azul_analysis_bundle_count', models.IntegerField(blank=True, default=0, verbose_name='azul')),
                ('succeeded_workflows', models.IntegerField(blank=True, default=0, verbose_name='workflow')),
                ('matrix_bundle_count', models.IntegerField(blank=True, default=0, verbose_name='matrix')),
                ('matrix_cell_count', models.IntegerField(blank=True, default=0, verbose_name='cells')),
            ],
            options={
                'verbose_name_plural': 'Tracking after submission',
            },
        ),
        migrations.AddField(
            model_name='project',
            name='assay_tech',
            field=models.ManyToManyField(blank=True, to='hcat.AssayTech'),
        ),
        migrations.AddField(
            model_name='project',
            name='assay_type',
            field=models.ManyToManyField(blank=True, to='hcat.AssayType'),
        ),
        migrations.AddField(
            model_name='project',
            name='consent',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hcat.Consent'),
        ),
        migrations.AddField(
            model_name='project',
            name='contacts',
            field=models.ManyToManyField(blank=True, related_name='projcontacts', to='hcat.Contributor'),
        ),
        migrations.AddField(
            model_name='project',
            name='contributors',
            field=models.ManyToManyField(to='hcat.Contributor'),
        ),
        migrations.AddField(
            model_name='project',
            name='cur_state',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cur_state', to='hcat.ProjectState'),
        ),
        migrations.AddField(
            model_name='project',
            name='disease',
            field=models.ManyToManyField(blank=True, to='hcat.Disease'),
        ),
        migrations.AddField(
            model_name='project',
            name='effort',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hcat.EffortType'),
        ),
        migrations.AddField(
            model_name='project',
            name='files',
            field=models.ManyToManyField(blank=True, to='hcat.File'),
        ),
        migrations.AddField(
            model_name='project',
            name='grants',
            field=models.ManyToManyField(blank=True, to='hcat.Grant'),
        ),
        migrations.AddField(
            model_name='project',
            name='labs',
            field=models.ManyToManyField(blank=True, to='hcat.Lab'),
        ),
        migrations.AddField(
            model_name='project',
            name='organ',
            field=models.ManyToManyField(blank=True, to='hcat.Organ'),
        ),
        migrations.AddField(
            model_name='project',
            name='organ_part',
            field=models.ManyToManyField(blank=True, to='hcat.OrganPart'),
        ),
        migrations.AddField(
            model_name='project',
            name='publications',
            field=models.ManyToManyField(blank=True, to='hcat.Publication'),
        ),
        migrations.AddField(
            model_name='project',
            name='responders',
            field=models.ManyToManyField(blank=True, related_name='projresponders', to='hcat.Contributor'),
        ),
        migrations.AddField(
            model_name='project',
            name='sample_type',
            field=models.ManyToManyField(blank=True, to='hcat.SampleType'),
        ),
        migrations.AddField(
            model_name='project',
            name='species',
            field=models.ManyToManyField(blank=True, to='hcat.Species'),
        ),
        migrations.AddField(
            model_name='project',
            name='state_reached',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='state_reached', to='hcat.ProjectState'),
        ),
        migrations.AddField(
            model_name='project',
            name='urls',
            field=models.ManyToManyField(blank=True, to='hcat.Url'),
        ),
        migrations.AddField(
            model_name='project',
            name='wrangler1',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wrangler1', to='hcat.Wrangler'),
        ),
        migrations.AddField(
            model_name='project',
            name='wrangler2',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wrangler2', to='hcat.Wrangler'),
        ),
        migrations.AddField(
            model_name='organpart',
            name='projects',
            field=models.ManyToManyField(blank=True, to='hcat.Project'),
        ),
        migrations.AddField(
            model_name='lab',
            name='projects',
            field=models.ManyToManyField(blank=True, to='hcat.Project'),
        ),
        migrations.AddField(
            model_name='grant',
            name='funded_labs',
            field=models.ManyToManyField(blank=True, to='hcat.Lab'),
        ),
        migrations.AddField(
            model_name='grant',
            name='funded_projects',
            field=models.ManyToManyField(blank=True, to='hcat.Project'),
        ),
        migrations.AddField(
            model_name='grant',
            name='funder',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hcat.Funder'),
        ),
        migrations.AddField(
            model_name='disease',
            name='projects',
            field=models.ManyToManyField(blank=True, related_name='projects_diseases_relationship', to='hcat.Project'),
        ),
        migrations.AddField(
            model_name='contributor',
            name='grants',
            field=models.ManyToManyField(blank=True, to='hcat.Grant'),
        ),
        migrations.AddField(
            model_name='contributor',
            name='labs',
            field=models.ManyToManyField(blank=True, to='hcat.Lab'),
        ),
        migrations.AddField(
            model_name='contributor',
            name='projects',
            field=models.ManyToManyField(blank=True, to='hcat.Project'),
        ),
        migrations.AddField(
            model_name='contributor',
            name='type',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hcat.ContributorType'),
        ),
        migrations.AddField(
            model_name='assaytype',
            name='projects',
            field=models.ManyToManyField(blank=True, related_name='projects_assay_type_relationship', to='hcat.Project'),
        ),
        migrations.AddField(
            model_name='assaytech',
            name='projects',
            field=models.ManyToManyField(blank=True, related_name='projects_assay_tech_relationship', to='hcat.Project'),
        ),
    ]
